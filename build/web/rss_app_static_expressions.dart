library rss_app.web.rss_app.generated_expressions;

import 'package:angular/change_detection/change_detection.dart';

final Map<String, FieldGetter> getters = {
  r"feed": (o) => o.feed,
  r"hideEmpty": (o) => o.hideEmpty,
  r"urls": (o) => o.urls,
  r"value": (o) => o.value,
  r"bind": (o) => o.bind,
  r"valueExpression": (o) => o.valueExpression,
  r"onAbort": (o) => o.onAbort,
  r"onBeforeCopy": (o) => o.onBeforeCopy,
  r"onBeforeCut": (o) => o.onBeforeCut,
  r"onBeforePaste": (o) => o.onBeforePaste,
  r"onBlur": (o) => o.onBlur,
  r"onChange": (o) => o.onChange,
  r"onClick": (o) => o.onClick,
  r"onContextMenu": (o) => o.onContextMenu,
  r"onCopy": (o) => o.onCopy,
  r"onCut": (o) => o.onCut,
  r"onDoubleClick": (o) => o.onDoubleClick,
  r"onDrag": (o) => o.onDrag,
  r"onDragEnd": (o) => o.onDragEnd,
  r"onDragEnter": (o) => o.onDragEnter,
  r"onDragLeave": (o) => o.onDragLeave,
  r"onDragOver": (o) => o.onDragOver,
  r"onDragStart": (o) => o.onDragStart,
  r"onDrop": (o) => o.onDrop,
  r"onError": (o) => o.onError,
  r"onFocus": (o) => o.onFocus,
  r"onFullscreenChange": (o) => o.onFullscreenChange,
  r"onFullscreenError": (o) => o.onFullscreenError,
  r"onInput": (o) => o.onInput,
  r"onInvalid": (o) => o.onInvalid,
  r"onKeyDown": (o) => o.onKeyDown,
  r"onKeyPress": (o) => o.onKeyPress,
  r"onKeyUp": (o) => o.onKeyUp,
  r"onLoad": (o) => o.onLoad,
  r"onMouseDown": (o) => o.onMouseDown,
  r"onMouseEnter": (o) => o.onMouseEnter,
  r"onMouseLeave": (o) => o.onMouseLeave,
  r"onMouseMove": (o) => o.onMouseMove,
  r"onMouseOut": (o) => o.onMouseOut,
  r"onMouseOver": (o) => o.onMouseOver,
  r"onMouseUp": (o) => o.onMouseUp,
  r"onMouseWheel": (o) => o.onMouseWheel,
  r"onPaste": (o) => o.onPaste,
  r"onReset": (o) => o.onReset,
  r"onScroll": (o) => o.onScroll,
  r"onSearch": (o) => o.onSearch,
  r"onSelect": (o) => o.onSelect,
  r"onSelectStart": (o) => o.onSelectStart,
  r"onSubmit": (o) => o.onSubmit,
  r"onTouchCancel": (o) => o.onTouchCancel,
  r"onTouchEnd": (o) => o.onTouchEnd,
  r"onTouchEnter": (o) => o.onTouchEnter,
  r"onTouchLeave": (o) => o.onTouchLeave,
  r"onTouchMove": (o) => o.onTouchMove,
  r"onTouchStart": (o) => o.onTouchStart,
  r"onTransitionEnd": (o) => o.onTransitionEnd,
  r"condition": (o) => o.condition,
  r"url": (o) => o.url,
  r"name": (o) => o.name,
  r"model": (o) => o.model,
  r"idlAttrKind": (o) => o.idlAttrKind,
  r"count": (o) => o.count,
  r"expression": (o) => o.expression,
  r"templateUrl": (o) => o.templateUrl,
  r"hide": (o) => o.hide,
  r"show": (o) => o.show,
  r"checked": (o) => o.checked,
  r"disabled": (o) => o.disabled,
  r"multiple": (o) => o.multiple,
  r"open": (o) => o.open,
  r"readonly": (o) => o.readonly,
  r"required": (o) => o.required,
  r"selected": (o) => o.selected,
  r"href": (o) => o.href,
  r"src": (o) => o.src,
  r"srcset": (o) => o.srcset,
  r"styleExpression": (o) => o.styleExpression,
  r"max": (o) => o.max,
  r"min": (o) => o.min,
  r"pattern": (o) => o.pattern,
  r"minlength": (o) => o.minlength,
  r"maxlength": (o) => o.maxlength,
  r"options": (o) => o.options,
  r"option": (o) => o.option,
  r"routeName": (o) => o.routeName,
  r"starred": (o) => o.starred,
  r"datetime": (o) => o.datetime,
  r"entry": (o) => o.entry,
  r"dataSource": (o) => o.dataSource,
  r"cmp": (o) => o.cmp,
  r"isHideEmpty": (o) => o.isHideEmpty,
  r"unreadCount": (o) => o.unreadCount,
  r"feeds": (o) => o.feeds,
  r"length": (o) => o.length,
  r"selectArea": (o) => o.selectArea,
  r"id": (o) => o.id,
  r"display": (o) => o.display,
  r"showAddFeed": (o) => o.showAddFeed,
  r"addingFeed": (o) => o.addingFeed,
  r"feedAddUrl": (o) => o.feedAddUrl,
  r"addFeedDisabled": (o) => o.addFeedDisabled,
  r"hasFeeds": (o) => o.hasFeeds,
  r"refreshingFeeds": (o) => o.refreshingFeeds,
  r"readingEntry": (o) => o.readingEntry,
  r"entries": (o) => o.entries,
  r"currentEntryIndex": (o) => o.currentEntryIndex,
  r"currentEntriesLength": (o) => o.currentEntriesLength,
  r"hasPrevEntry": (o) => o.hasPrevEntry,
  r"hasNextEntry": (o) => o.hasNextEntry,
  r"hasUnread": (o) => o.hasUnread,
  r"Tag": (o) => o.Tag,
  r"tag": (o) => o.tag,
  r"Post": (o) => o.Post,
  r"unread": (o) => o.unread,
  r"title": (o) => o.title,
  r"imageUrl": (o) => o.imageUrl,
  r"author": (o) => o.author,
  r"image": (o) => o.image,
  r"published": (o) => o.published,
  r"newitem": (o) => o.newitem,
  r"showOptions": (o) => o.showOptions,
  r"$event": (o) => o.$event,
  r"showRightFrame": (o) => o.showRightFrame,
  r"categories": (o) => o.categories,
  r"Menu": (o) => o.Menu,
  r"Pubdate": (o) => o.Pubdate,
  r"formattedTime": (o) => o.formattedTime,
  r"Article": (o) => o.Article,
  r"entryid": (o) => o.entryid,
  r"articleUri": (o) => o.articleUri,
  r"text": (o) => o.text,
  r"fullDate": (o) => o.fullDate,
  r"Settings": (o) => o.Settings,
  r"analyticsEnabled": (o) => o.analyticsEnabled,
  r"analyticsLabel": (o) => o.analyticsLabel,
  r"appVersion": (o) => o.appVersion,
  r"EntriesList": (o) => o.EntriesList,
  r"listLength": (o) => o.listLength,
  r"post": (o) => o.post,
  r"hasPostsInView": (o) => o.hasPostsInView,
  r"handleClick": (o) => o.handleClick,
  r"removeFeed": (o) => o.removeFeed,
  r"clearFeed": (o) => o.clearFeed,
  r"addFeed": (o) => o.addFeed,
  r"onRefreshFeeds": (o) => o.onRefreshFeeds,
  r"goToEntry": (o) => o.goToEntry,
  r"markAllAsRead": (o) => o.markAllAsRead,
  r"reportOpen": (o) => o.reportOpen,
  r"onStarChange": (o) => o.onStarChange,
  r"toggleOptions": (o) => o.toggleOptions,
  r"unreadEntry": (o) => o.unreadEntry,
  r"frameLoad": (o) => o.frameLoad,
  r"getCategoryUrl": (o) => o.getCategoryUrl,
  r"readPost": (o) => o.readPost,
  r"toggleAnalytics": (o) => o.toggleAnalytics,
  r"hasPosts": (o) => o.hasPosts
};
final Map<String, FieldSetter> setters = {
  r"feed": (o, v) => o.feed = v,
  r"hideEmpty": (o, v) => o.hideEmpty = v,
  r"urls": (o, v) => o.urls = v,
  r"value": (o, v) => o.value = v,
  r"bind": (o, v) => o.bind = v,
  r"valueExpression": (o, v) => o.valueExpression = v,
  r"onAbort": (o, v) => o.onAbort = v,
  r"onBeforeCopy": (o, v) => o.onBeforeCopy = v,
  r"onBeforeCut": (o, v) => o.onBeforeCut = v,
  r"onBeforePaste": (o, v) => o.onBeforePaste = v,
  r"onBlur": (o, v) => o.onBlur = v,
  r"onChange": (o, v) => o.onChange = v,
  r"onClick": (o, v) => o.onClick = v,
  r"onContextMenu": (o, v) => o.onContextMenu = v,
  r"onCopy": (o, v) => o.onCopy = v,
  r"onCut": (o, v) => o.onCut = v,
  r"onDoubleClick": (o, v) => o.onDoubleClick = v,
  r"onDrag": (o, v) => o.onDrag = v,
  r"onDragEnd": (o, v) => o.onDragEnd = v,
  r"onDragEnter": (o, v) => o.onDragEnter = v,
  r"onDragLeave": (o, v) => o.onDragLeave = v,
  r"onDragOver": (o, v) => o.onDragOver = v,
  r"onDragStart": (o, v) => o.onDragStart = v,
  r"onDrop": (o, v) => o.onDrop = v,
  r"onError": (o, v) => o.onError = v,
  r"onFocus": (o, v) => o.onFocus = v,
  r"onFullscreenChange": (o, v) => o.onFullscreenChange = v,
  r"onFullscreenError": (o, v) => o.onFullscreenError = v,
  r"onInput": (o, v) => o.onInput = v,
  r"onInvalid": (o, v) => o.onInvalid = v,
  r"onKeyDown": (o, v) => o.onKeyDown = v,
  r"onKeyPress": (o, v) => o.onKeyPress = v,
  r"onKeyUp": (o, v) => o.onKeyUp = v,
  r"onLoad": (o, v) => o.onLoad = v,
  r"onMouseDown": (o, v) => o.onMouseDown = v,
  r"onMouseEnter": (o, v) => o.onMouseEnter = v,
  r"onMouseLeave": (o, v) => o.onMouseLeave = v,
  r"onMouseMove": (o, v) => o.onMouseMove = v,
  r"onMouseOut": (o, v) => o.onMouseOut = v,
  r"onMouseOver": (o, v) => o.onMouseOver = v,
  r"onMouseUp": (o, v) => o.onMouseUp = v,
  r"onMouseWheel": (o, v) => o.onMouseWheel = v,
  r"onPaste": (o, v) => o.onPaste = v,
  r"onReset": (o, v) => o.onReset = v,
  r"onScroll": (o, v) => o.onScroll = v,
  r"onSearch": (o, v) => o.onSearch = v,
  r"onSelect": (o, v) => o.onSelect = v,
  r"onSelectStart": (o, v) => o.onSelectStart = v,
  r"onSubmit": (o, v) => o.onSubmit = v,
  r"onTouchCancel": (o, v) => o.onTouchCancel = v,
  r"onTouchEnd": (o, v) => o.onTouchEnd = v,
  r"onTouchEnter": (o, v) => o.onTouchEnter = v,
  r"onTouchLeave": (o, v) => o.onTouchLeave = v,
  r"onTouchMove": (o, v) => o.onTouchMove = v,
  r"onTouchStart": (o, v) => o.onTouchStart = v,
  r"onTransitionEnd": (o, v) => o.onTransitionEnd = v,
  r"condition": (o, v) => o.condition = v,
  r"url": (o, v) => o.url = v,
  r"name": (o, v) => o.name = v,
  r"model": (o, v) => o.model = v,
  r"idlAttrKind": (o, v) => o.idlAttrKind = v,
  r"count": (o, v) => o.count = v,
  r"expression": (o, v) => o.expression = v,
  r"templateUrl": (o, v) => o.templateUrl = v,
  r"hide": (o, v) => o.hide = v,
  r"show": (o, v) => o.show = v,
  r"checked": (o, v) => o.checked = v,
  r"disabled": (o, v) => o.disabled = v,
  r"multiple": (o, v) => o.multiple = v,
  r"open": (o, v) => o.open = v,
  r"readonly": (o, v) => o.readonly = v,
  r"required": (o, v) => o.required = v,
  r"selected": (o, v) => o.selected = v,
  r"href": (o, v) => o.href = v,
  r"src": (o, v) => o.src = v,
  r"srcset": (o, v) => o.srcset = v,
  r"styleExpression": (o, v) => o.styleExpression = v,
  r"max": (o, v) => o.max = v,
  r"min": (o, v) => o.min = v,
  r"pattern": (o, v) => o.pattern = v,
  r"minlength": (o, v) => o.minlength = v,
  r"maxlength": (o, v) => o.maxlength = v,
  r"options": (o, v) => o.options = v,
  r"option": (o, v) => o.option = v,
  r"routeName": (o, v) => o.routeName = v,
  r"starred": (o, v) => o.starred = v,
  r"datetime": (o, v) => o.datetime = v,
  r"entry": (o, v) => o.entry = v,
  r"dataSource": (o, v) => o.dataSource = v,
  r"cmp": (o, v) => o.cmp = v,
  r"isHideEmpty": (o, v) => o.isHideEmpty = v,
  r"unreadCount": (o, v) => o.unreadCount = v,
  r"feeds": (o, v) => o.feeds = v,
  r"length": (o, v) => o.length = v,
  r"selectArea": (o, v) => o.selectArea = v,
  r"id": (o, v) => o.id = v,
  r"display": (o, v) => o.display = v,
  r"showAddFeed": (o, v) => o.showAddFeed = v,
  r"addingFeed": (o, v) => o.addingFeed = v,
  r"feedAddUrl": (o, v) => o.feedAddUrl = v,
  r"addFeedDisabled": (o, v) => o.addFeedDisabled = v,
  r"hasFeeds": (o, v) => o.hasFeeds = v,
  r"refreshingFeeds": (o, v) => o.refreshingFeeds = v,
  r"readingEntry": (o, v) => o.readingEntry = v,
  r"entries": (o, v) => o.entries = v,
  r"currentEntryIndex": (o, v) => o.currentEntryIndex = v,
  r"currentEntriesLength": (o, v) => o.currentEntriesLength = v,
  r"hasPrevEntry": (o, v) => o.hasPrevEntry = v,
  r"hasNextEntry": (o, v) => o.hasNextEntry = v,
  r"hasUnread": (o, v) => o.hasUnread = v,
  r"Tag": (o, v) => o.Tag = v,
  r"tag": (o, v) => o.tag = v,
  r"Post": (o, v) => o.Post = v,
  r"unread": (o, v) => o.unread = v,
  r"title": (o, v) => o.title = v,
  r"imageUrl": (o, v) => o.imageUrl = v,
  r"author": (o, v) => o.author = v,
  r"image": (o, v) => o.image = v,
  r"published": (o, v) => o.published = v,
  r"newitem": (o, v) => o.newitem = v,
  r"showOptions": (o, v) => o.showOptions = v,
  r"$event": (o, v) => o.$event = v,
  r"showRightFrame": (o, v) => o.showRightFrame = v,
  r"categories": (o, v) => o.categories = v,
  r"Menu": (o, v) => o.Menu = v,
  r"Pubdate": (o, v) => o.Pubdate = v,
  r"formattedTime": (o, v) => o.formattedTime = v,
  r"Article": (o, v) => o.Article = v,
  r"entryid": (o, v) => o.entryid = v,
  r"articleUri": (o, v) => o.articleUri = v,
  r"text": (o, v) => o.text = v,
  r"fullDate": (o, v) => o.fullDate = v,
  r"Settings": (o, v) => o.Settings = v,
  r"analyticsEnabled": (o, v) => o.analyticsEnabled = v,
  r"analyticsLabel": (o, v) => o.analyticsLabel = v,
  r"appVersion": (o, v) => o.appVersion = v,
  r"EntriesList": (o, v) => o.EntriesList = v,
  r"listLength": (o, v) => o.listLength = v,
  r"post": (o, v) => o.post = v,
  r"hasPostsInView": (o, v) => o.hasPostsInView = v
};
final Map<String, Symbol> symbols = {

};
